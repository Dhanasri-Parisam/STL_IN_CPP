//Queue in cpp:

#include<iostream>
#include<queue>
using namespace std;
int main(){
    queue<int> st;
    st.push(1);
    st.push(2);
    st.push(3);
    st.push(10);
    cout<<st.size()<<"\n";
    cout<<st.front()<<"\n";
    cout<<st.back()+1<<"\n";
    st.pop();
    cout<<st.empty();
}

//priority_Queue_in_cpp:
//Max_heap--> alwas takes high val top low

priority_queue<int>pq;//it stores in decending order
    pq.push(1);//{1}
    pq.push(10);//{10,1}
    pq.push(5);//{10,5,1}
    pq.emplace(8);//{10,8,5,1}
    cout<<pq.top()<<endl;//prints 10
    pq.pop();//10 will be removed
    cout<<pq.top()<<endl;//8 will be printed

    //minimum heap-- to store in accending oredr
    priority_queue<int,vector<int>,greater<int>>pq1;
    pq1.push(10);//{10}
    pq1.push(8);//{8,10}
    cout<<pq1.top();

//min heap--> always takes low val to high value
#include<iostream>
#include<queue>
using namespace std;

int main() {
    priority_queue<int,vector<int>,greater<int>>q;
    // Corrected the class name to 'priority_queue'
    
    q.push(800);
    q.push(20);
    q.push(40);
    q.push(30);
    cout<<q.top()<<"\n";
    while(!q.empty()){
    cout << q.top();  // This will print the largest element
    q.pop();
}

    return 0;
}


